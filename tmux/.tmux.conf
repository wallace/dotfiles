###########################
##  Configuration
############################

# use vim key bindings
setw -g mode-keys vi

# make vim work better in tmux
# from http://stackoverflow.com/questions/12312178/tmux-and-vim-escape-key-being-seen-as-and-having-long-delay
set -s escape-time 0

# Set scrollback
set -g history-limit 15000

# We're using iTerm which supports 256 colors
set -g default-terminal "screen-256color"

# decrease command delay (increases vim responsiveness)
# (in milliseconds)
set -sg escape-time 1

# re-number windows when one is closed
set -g renumber-windows on

# Start windows and panes at 1, not 0
set -g base-index 1
set -g pane-base-index 1

# tmux prefix is now ctrl-' '
unbind C-b
set -g prefix C-Space

# ###########################
# #  Key Bindings
# ###########################

# Setup 'v' to begin selection as in Vim
bind-key -Tcopy-mode-vi 'v' send -X begin-selection
bind-key -Tcopy-mode-vi 'y' send -X copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
# unbind -t vi-copy Enter
# bind -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

## Join windows: <prefix> s, <prefix> j
bind-key          S choose-window "join-pane -v -s "%%""
bind-key          V choose-window "join-pane -h -s "%%""
bind-key          B "break-pane"

# Allow tmux to send pane navigation keys to vim when using vim
# This allows us to use same keys for navigating in vim as tmux
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
#bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Moving among panes
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Resizing panes
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# prefix-| splits vertically
# prefix-- splits horizontally
bind | split-window -h
bind - split-window -v

# Reload .tmux.conf with prefix-r
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# set color of active pane
set -g pane-border-style 'fg=colour237,bg=black'
set -g pane-active-border-style fg=blue,bg=black

set -g status-style 'bg=colour238,none'
set -g message-command-style 'fg=colour249,bg=colour237'
set -g status-justify "left"
set -g status-left-length "100"
set -g status "on"
set -g pane-active-border-style 'fg=colour117'
set -g message-style 'fg=colour249,bg=colour237'
set -g status-right-length "100"
set -g status-right-style "none"
setw -g window-status-style "fg=colour117,bg=colour238,none"
setw -g window-status-activity-style 'bg=colour238,fg=colour117,none'
setw -g window-status-separator ""
set -g status-left "#[fg=colour236,bg=#81a2be] #S #[fg=#81a2be,bg=colour238,nobold,nounderscore,noitalics]"
set -g status-right "#[fg=colour237,bg=colour238,nobold,nounderscore,noitalics]#[fg=colour249,bg=colour237] %Y-%m-%d %H:%M #[fg=#81a2be,bg=colour237,nobold,nounderscore,noitalics]#[fg=colour236,bg=#81a2be] #h"
setw -g window-status-format "#[fg=colour249,bg=colour238] #I#[fg=colour249,bg=#434343] #W #F"
setw -g window-status-current-format "#[fg=colour238,bg=colour237,nobold,nounderscore,noitalics]#[fg=#8abeb7,bg=colour237] #I#[fg=#81a2be,bg=colour237] #W #F #[fg=colour237,bg=colour238,nobold,nounderscore,noitalics]"

if-shell 'test "$(uname)" = "Darwin"' 'source ~/.tmux-osx.conf' 'source ~/.tmux-linux.conf'
